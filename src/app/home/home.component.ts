import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { buttonType, DialogComponent } from '../util/dialog/dialog.component';

@Component({
  selector: 'app-home',
  imports: [
    FormsModule,
    DialogComponent,
  ],
  templateUrl: './home.component.html',
  standalone: true,
  styleUrl: './home.component.scss',
})
export class HomeComponent {

  apps = [
    {
      'name': 'Simple Calculator',
      'icon': 'calculate',
      'url': 'simple-calculator',
      'path.d': undefined,
    },
    {
      'name': 'Testing Site',
      'icon': 'app_registration',
      'url': 'testing-site',
      'path.d': undefined,
    },
    {
      'name': 'Tell a joke',
      'icon': 'theater_comedy',
      'url': '',
      'path.d': undefined,
    },
    {
      'name': 'FLAMES',
      'icon': 'favorite',
      'url': 'flames',
      'path.d': undefined,
    },
    {
      'name': 'Digital Clock',
      'icon': 'alarm',
      'url': 'digital-clock',
      'path.d': undefined,
    },
    {
      'name': 'Pick a menu',
      'icon': 'restaurant',
      'url': 'pick-a-menu',
      'path.d': undefined,
    },
    {
      'name': 'Planning Poker',
      'icon': 'free-icons',
      'url': 'planning-poker',
      'path.d': 'M 44.52173913043478 179.67701863354037 Q 39.75155279503105 182.85714285714286 42.13664596273292 188.4223602484472 L 174.90683229813664 418.18633540372673 L 174.90683229813664 418.18633540372673 Q 178.08695652173913 422.95652173913044 183.65217391304347 420.57142857142856 L 336.29813664596276 332.3229813664596 L 336.29813664596276 332.3229813664596 Q 341.06832298136646 329.14285714285717 338.6832298136646 323.5776397515528 L 205.91304347826087 93.8136645962733 L 205.91304347826087 93.8136645962733 Q 202.73291925465838 89.04347826086956 197.96273291925465 91.42857142857143 L 44.52173913043478 179.67701863354037 L 44.52173913043478 179.67701863354037 Z M 9.540372670807454 207.50310559006212 Q 0 190.80745341614906 4.770186335403727 174.11180124223603 L 4.770186335403727 174.11180124223603 L 4.770186335403727 174.11180124223603 Q 9.540372670807454 156.62111801242236 25.440993788819874 147.08074534161491 L 178.88198757763976 58.83229813664596 L 178.88198757763976 58.83229813664596 Q 194.7826086956522 49.29192546583851 212.27329192546583 54.06211180124224 Q 228.9689440993789 58.83229813664596 239.30434782608697 74.73291925465838 L 372.0745341614907 304.4968944099379 L 372.0745341614907 304.4968944099379 Q 380.8198757763975 321.1925465838509 376.0496894409938 337.888198757764 Q 372.0745341614907 355.37888198757764 355.37888198757764 364.9192546583851 L 202.73291925465838 453.9627329192547 L 202.73291925465838 453.9627329192547 Q 186.03726708074535 462.7080745341615 168.54658385093168 457.9378881987578 Q 151.85093167701862 453.167701863354 141.51552795031057 437.2670807453416 L 9.540372670807454 207.50310559006212 L 9.540372670807454 207.50310559006212 Z M 368.0993788819876 387.1801242236025 Q 393.54037267080747 371.27950310559004 400.69565217391306 345.04347826086956 L 400.69565217391306 345.04347826086956 L 400.69565217391306 345.04347826086956 Q 407.85093167701865 318.0124223602484 394.3354037267081 291.77639751552795 L 285.41614906832297 103.35403726708074 L 285.41614906832297 103.35403726708074 Q 287.00621118012424 103.35403726708074 289.39130434782606 103.35403726708074 L 467.4782608695652 103.35403726708074 L 467.4782608695652 103.35403726708074 Q 486.55900621118013 104.14906832298136 499.27950310559004 116.07453416149069 Q 511.2049689440994 128.7950310559006 512 147.87577639751552 L 512 415.00621118012424 L 512 415.00621118012424 Q 511.2049689440994 434.0869565217391 499.27950310559004 446.8074534161491 Q 486.55900621118013 458.7329192546584 467.4782608695652 459.527950310559 L 289.39130434782606 459.527950310559 L 289.39130434782606 459.527950310559 Q 272.69565217391306 459.527950310559 260.7701863354037 449.1925465838509 L 368.0993788819876 387.1801242236025 L 368.0993788819876 387.1801242236025 Z',
    },
  ];
  openDialog: boolean = false;
  joke: string = '';
  protected readonly buttonType = buttonType;

  getJoke() {
    fetch('https://v2.jokeapi.dev/joke/Any?safe-mode')
      .then(response => {
        if (response.ok) {
          response.json().then(data => {
            if (data.type === 'single') {
              this.joke = data.joke;
            } else {
              this.joke = `- ${data.setup}<br>- ${data.delivery}`;
            }
          });
        } else {
          alert('Joke API not working');
        }
      });
  }

  openApp(name: string, url: string) {
    if (url === '') {
      switch (name) {
        case 'Tell a joke':
          this.getJoke();
          this.openDialog = true;
          break;
      }
    } else {
      window.open(url, '_self');
    }
  }

  processDialogEvent($event: boolean) {
    if ($event) {
      this.getJoke();
    } else {
      this.joke = '';
      this.openDialog = false;
    }
  }

}
